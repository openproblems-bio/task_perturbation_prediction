name: "nn_retraining_with_pseudolabels"
namespace: "methods"
version: "build_main"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--de_train_h5ad"
    info:
      label: "DE train"
      summary: "Differential expression results for training."
      file_type: "h5ad"
      slots:
        obs:
        - name: "cell_type"
          type: "string"
          description: "The annotated cell type of each cell based on RNA expression."
          required: true
        - name: "sm_name"
          type: "string"
          description: "The primary name for the (parent) compound (in a standardized\
            \ representation)\nas chosen by LINCS. This is provided to map the data\
            \ in this experiment to \nthe LINCS Connectivity Map data.\n"
          required: true
        - name: "sm_lincs_id"
          type: "string"
          description: "The global LINCS ID (parent) compound (in a standardized representation).\n\
            This is provided to map the data in this experiment to the LINCS Connectivity\n\
            Map data.\n"
          required: true
        - name: "SMILES"
          type: "string"
          description: "Simplified molecular-input line-entry system (SMILES) representations\
            \ of the\ncompounds used in the experiment. This is a 1D representation\
            \ of molecular\nstructure. These SMILES are provided by Cellarity based\
            \ on the specific\ncompounds ordered for this experiment.\n"
          required: true
        - name: "split"
          type: "string"
          description: "Split. Must be one of 'control', 'train', 'public_test', or\
            \ 'private_test'"
          required: true
        - name: "control"
          type: "boolean"
          description: "Boolean indicating whether this instance was used as a control."
          required: true
        layers:
        - name: "logFC"
          type: "double"
          description: "Log fold change of the differential expression test"
          required: true
        - name: "AveExpr"
          type: "double"
          description: "Average expression of the differential expression test"
          required: false
        - name: "t"
          type: "double"
          description: "T-statistic of the differential expression test"
          required: false
        - name: "P.Value"
          type: "double"
          description: "P-value of the differential expression test"
          required: true
        - name: "adj.P.Value"
          type: "double"
          description: "Adjusted P-value of the differential expression test"
          required: true
        - name: "B"
          type: "double"
          description: "B-statistic of the differential expression test"
          required: false
        - name: "is_de"
          type: "boolean"
          description: "Whether the gene is differentially expressed"
          required: true
        - name: "is_de_adj"
          type: "boolean"
          description: "Whether the gene is differentially expressed after adjustment"
          required: true
        - name: "sign_log10_pval"
          type: "double"
          description: "Differential expression value (`-log10(p-value) * sign(LFC)`)\
            \ for each gene.\nHere, LFC is the estimated log-fold change in expression\
            \ between the treatment\nand control condition after shrinkage as calculated\
            \ by Limma. Positive LFC means\nthe gene goes up in the treatment condition\
            \ relative to the control.\n"
          required: true
        - name: "clipped_sign_log10_pval"
          type: "double"
          description: "A clipped version of the sign_log10_pval layer. Values are\
            \ clipped to be between\n-4 and 4 (i.e. `-log10(0.0001)` and `-log10(0.0001)`).\n"
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset. This is different from\
            \ the `obs.dataset_id` field, which is the identifier for the dataset\
            \ from which the cell data is derived."
          required: true
        - name: "dataset_name"
          type: "string"
          description: "A human-readable name for the dataset."
          required: true
        - type: "string"
          name: "dataset_url"
          description: "Link to the original source of the dataset."
          required: false
        - name: "dataset_reference"
          type: "string"
          description: "Bibtex reference of the paper in which the dataset was published."
          required: false
          multiple: true
        - name: "dataset_summary"
          type: "string"
          description: "Short description of the dataset."
          required: true
        - name: "dataset_description"
          type: "string"
          description: "Long description of the dataset."
          required: true
        - name: "dataset_organism"
          type: "string"
          description: "The organism of the sample in the dataset."
          required: false
          multiple: true
        - name: "single_cell_obs"
          type: "dataframe"
          description: "A dataframe with the cell-level metadata for the training\
            \ set.\n"
          required: true
    example:
    - "resources/datasets/neurips-2023-data/de_train.h5ad"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--id_map"
    info:
      label: "ID Map"
      summary: "File indicates the order of de_test, the cell types and the small\
        \ molecule names."
      file_type: "csv"
      columns:
      - name: "id"
        type: "integer"
        description: "Index of the test observation"
        required: true
      - name: "cell_type"
        type: "string"
        description: "Cell type name"
        required: true
      - name: "sm_name"
        type: "string"
        description: "Small molecule name"
        required: true
    example:
    - "resources/datasets/neurips-2023-data/id_map.csv"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--layer"
    description: "Which layer to use for prediction."
    info: null
    default:
    - "clipped_sign_log10_pval"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--output"
    info:
      label: "Prediction"
      summary: "Differential Gene Expression prediction"
      file_type: "h5ad"
      slots:
        layers:
        - name: "prediction"
          type: "double"
          description: "Predicted differential gene expression"
          required: true
        uns:
        - type: "string"
          name: "dataset_id"
          description: "A unique identifier for the dataset. This is different from\
            \ the `obs.dataset_id` field, which is the identifier for the dataset\
            \ from which the cell data is derived."
          required: true
        - type: "string"
          name: "method_id"
          description: "A unique identifier for the method used to generate the prediction."
          required: true
    example:
    - "resources/datasets/neurips-2023-data/prediction.h5ad"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--output_model"
    info:
      label: "Model"
      summary: "Optional model output. If no value is passed, the model will be removed\
        \ at the end of the run."
      file_type: "directory"
    example:
    - "resources/datasets/neurips-2023-data/model"
    must_exist: false
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--reps"
    description: "Number of repetitions to train the model."
    info:
      test_default: 1
    default:
    - 10
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
- type: "file"
  path: "notebook_264.py"
- type: "file"
  path: "notebook_266.py"
- type: "file"
  path: "anndata_to_dataframe.py"
test_resources:
- type: "python_script"
  path: "run_and_check_output.py"
  is_executable: true
- type: "file"
  path: "resources/datasets/neurips-2023-data"
  dest: "resources/datasets/neurips-2023-data"
info:
  label: "NN retraining with pseudolabels"
  neurips2023_rank: 3
  summary: "Neural networks with pseudolabeling and ensemble modelling"
  description: "The prediction system is two staged, so I publish two versions of\
    \ the notebook.\nThe first stage predicts pseudolabels. To be honest, if I stopped\
    \ on this version, I would not be the third.\nThe predicted pseudolabels on all\
    \ test data (255 rows) are added to training in the second stage.\n\n**Stage 1\
    \ preparing pseudolabels**: The main part of this system is a neural network.\
    \ Every neural network and its environment was optimized by optuna. Hyperparameters\
    \ that have been optimized:\na dropout value, a number of neurons in particular\
    \ layers, an output dimension of an embedding layer, a number of epochs, a learning\
    \ rate, a batch size, a number of dimension of truncated singular value decomposition.\n\
    The optimization was done on custom 4-folds cross validation. In order to avoid\
    \ overfitting to cross validation by optuna I applied 2 repeats for every fold\
    \ and took an average. Generally, the more, the better. The optuna's criterion\
    \ was MRRMSE.\nFinally, 7 models were ensembled. Optuna was applied again to determine\
    \ best weights of linear combination. The prediction of test set is the pseudolabels\
    \ now and will be used in second stage.\n\n**Stage 2 retraining with pseudolabels**:\
    \ The pseudolabels (255 rows) were added to the training dataset. I applied 20\
    \ models with optimized parameters in different experiments for a model diversity.\n\
    Optuna selected optimal weights for the linear combination of the prediction again.\n\
    Models had high variance, so every model was trained 10 times on all dataset and\
    \ the median of prediction is taken as a final prediction. The prediction was\
    \ additionally clipped to colwise min and max. \n"
  documentation_url: "https://www.kaggle.com/competitions/open-problems-single-cell-perturbations/discussion/458750"
  repository_url: "https://github.com/okon2000/single_cell_perturbations"
  type: "method"
  type_info:
    label: "Method"
    summary: "A perturbation prediction method"
    description: "A method for predicting the perturbation response of small molecules\
      \ on certain cell types.\n"
status: "enabled"
license: "MIT"
links:
  repository: "https://github.com/openproblems-bio/task_perturbation_prediction"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "hightime"
    - "midmem"
    - "highcpu"
    - "gpu"
    - "midsharedmem"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "ghcr.io/openproblems-bio/base_images/tensorflow_nvidia:1.1.0"
  namespace_separator: "/"
  setup:
  - type: "python"
    user: false
    packages:
    - "scikit-learn==1.3.2"
    - "fastparquet"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "native"
  id: "native"
build_info:
  config: "src/methods/nn_retraining_with_pseudolabels/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker|native"
  output: "target/nextflow/methods/nn_retraining_with_pseudolabels"
  executable: "target/nextflow/methods/nn_retraining_with_pseudolabels/main.nf"
  viash_version: "0.9.0-RC6"
  git_commit: "e5a05568a223c55860da3234dc94b0ebbaf08f28"
  git_remote: "https://github.com/openproblems-bio/task_perturbation_prediction"
package_config:
  name: "task_perturbation_prediction"
  version: "build_main"
  description: "Predicting how small molecules change gene expression in different\
    \ cell types.\n"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openproblems-data/resources/perturbation_prediction/datasets"
      dest: "resources/datasets"
  viash_version: "0.9.0-RC6"
  source: "src"
  target: "target"
  config_mods:
  - ".runners[.type == \"nextflow\"].config.labels := { lowmem : \"memory = 20.Gb\"\
    , midmem : \"memory = 50.Gb\", highmem : \"memory = 100.Gb\", lowcpu : \"cpus\
    \ = 5\", midcpu : \"cpus = 15\", highcpu : \"cpus = 30\", lowtime : \"time = 1.h\"\
    , midtime : \"time = 4.h\", hightime : \"time = 8.h\", veryhightime : \"time =\
    \ 24.h\" }"
  keywords:
  - "single-cell"
  - "perturbation prediction"
  - "perturbation"
  - "openproblems"
  - "benchmark"
  license: "MIT"
  organization: "openproblems-bio"
  links:
    repository: "https://github.com/openproblems-bio/task_perturbation_prediction"
    docker_registry: "ghcr.io"
    issue_tracker: "https://github.com/openproblems-bio/task_perturbation_prediction/issues"
